(self.webpackChunkwebpack_init_project=self.webpackChunkwebpack_init_project||[]).push([[826],{421:()=>{},138:(t,e,n)=>{"use strict";n.a(t,(async(t,e)=>{try{n(421);var a=n(191),c=n.n(a);const t=()=>{const t=document.getElementById("title-template").cloneNode(!0);t.textContent="API-based-webap",document.querySelector("main").appendChild(t)},r=async()=>{t()};window.addEventListener("load",r);var o=await c().get("https://api.tvmaze.com/shows"),s=document.querySelector(".flex-container"),i=document.querySelector(".tv-show-modal"),d=document.querySelectorAll(".comment"),l=document.getElementsByClassName("close")[0];d.forEach((t=>{t.addEventListener("click",(()=>{i.style.display="block"}))})),l.addEventListener("click",(()=>{i.style.display="none"}));var m="";o.forEach((t=>{let e=t.id,n=t.name,a=t.image.medium;m+=`\n<div class="shows">\n\t\t\t\t<div id="1">\n                    ${e}  ${n}\n\t\t\t\t</div>\n\t\t\t\t<div class="img-container">\n\t\t\t\t\t<img src="${a}" alt="photo">\n\t\t\t\t</div>\n\t\t\t\t<div class="reaction">\n\t\t\t\t\t<button>like</button>\n\t\t\t\t\t<button class="comment">comment</button>\n\t\t\t\t</div>\n\t\t\t</div>\n`})),s.innerHTML=m,e()}catch(t){e(t)}}),1)},191:t=>{t.exports={get:async t=>(await fetch(t)).json(),getlike:async t=>(await fetch(t,{method:"GET"})).json(),like:async(t,e)=>{await fetch(t,{method:"POST",body:JSON.stringify({item_id:e}),headers:{"Content-type":"application/json; charset=UTF-8"}})},getComment:async(t,e)=>{let n=await fetch(t);return 400===n.status?(n=[],n):n.json()},comment:async(t,e,n,a)=>(await fetch(t,{method:"POST",body:JSON.stringify({item_id:e,username:n,comment:a}),headers:{"Content-type":"application/json; charset=UTF-8"}})).status}}},t=>{t(t.s=138)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguYnVuZGxlLmpzIiwibWFwcGluZ3MiOiIwTEFFQSxNQUFNQSxFQUFlLEtBQ25CLE1BQ01DLEVBRHVCQyxTQUFTQyxlQUFlLGtCQUNSQyxXQUFVLEdBRXZESCxFQUFnQkksWUFBYyxrQkFFOUJILFNBQVNJLGNBQWMsUUFBUUMsWUFBWU4sRUFBZ0IsRUFHdkRPLEVBQU9DLFVBQ1hULEdBQWMsRUFHaEJVLE9BQU9DLGlCQUFpQixPQUFRSCxHQUdoQyxJQUFJSSxRQUFjLFFBQVMsZ0NBQ3ZCQyxFQUFZWCxTQUFTSSxjQUFjLG1CQUNuQ1EsRUFBT1osU0FBU0ksY0FBYyxrQkFDOUJTLEVBQWdCYixTQUFTYyxpQkFBaUIsWUFDMUNDLEVBQU9mLFNBQVNnQix1QkFBdUIsU0FBUyxHQUNwREgsRUFBZUksU0FBUUMsSUFDbkJBLEVBQUlULGlCQUFpQixTQUFRLEtBQ3pCRyxFQUFNTyxNQUFNQyxRQUFVLFVBQ3hCLElBR05MLEVBQUtOLGlCQUFpQixTQUFTLEtBQzNCRyxFQUFNTyxNQUFNQyxRQUFVLE1BQU0sSUFHaEMsSUFBSUMsRUFBUyxHQUNiWCxFQUFPTyxTQUFRSyxJQUNYLElBQUlDLEVBQUlELEVBQUVDLEdBQ05DLEVBQU1GLEVBQUVFLEtBQ1JDLEVBQVFILEVBQUVHLE1BQU1DLE9BQ3hCTCxHQUFVLG9FQUdZRSxNQUFPQywrRUFHWkMsc0xBT2hCLElBSURkLEVBQVVnQixVQUFVTixFLGlDQ1huQk8sRUFBT0MsUUFBUyxDQUFFQyxJQTVDUHZCLE1BQU93QixVQUNNQyxNQUFNRCxJQUViRSxPQXlDTUMsUUF0Q1IzQixNQUFPd0IsVUFDRUMsTUFBTUQsRUFBSyxDQUFFSSxPQUFRLFNBQzVCRixPQW9DZUcsS0FsQ3BCN0IsTUFBT3dCLEVBQUtSLFdBQ2pCUyxNQUFNRCxFQUFLLENBQ2ZJLE9BQVEsT0FDUkUsS0FBTUMsS0FBS0MsVUFBVSxDQUNuQkMsUUFBU2pCLElBRVhrQixRQUFTLENBQ1AsZUFBZ0Isb0NBRWxCLEVBeUJtQ0MsV0F2QnBCbkMsTUFBT3dCLEVBQUtSLEtBQzdCLElBQUlvQixRQUFpQlgsTUFBTUQsR0FDM0IsT0FBd0IsTUFBcEJZLEVBQVNDLFFBQ1hELEVBQVcsR0FDSkEsR0FFRkEsRUFBU1YsTUFBTSxFQWlCMkJZLFFBZG5DdEMsTUFBT3dCLEVBQUtlLEVBQVFDLEVBQVVGLFdBQ3JCYixNQUFNRCxFQUFLLENBQ2hDSSxPQUFRLE9BQ1JFLEtBQU1DLEtBQUtDLFVBQVUsQ0FDbkJDLFFBQVNNLEVBQ1RDLFdBQ0FGLFlBRUZKLFFBQVMsQ0FDUCxlQUFnQixzQ0FHSkcsTyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnBhY2staW5pdC1wcm9qZWN0Ly4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL3dlYnBhY2staW5pdC1wcm9qZWN0Ly4vc3JjL21vZHVsZS9hcGlDYWxsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi9zdHlsZS5zY3NzJztcclxuaW1wb3J0IGZpbGUgZnJvbSAnLi9tb2R1bGUvYXBpQ2FsbC5qcydcclxuY29uc3QgaW5pdFRlbXBsYXRlID0gKCkgPT4ge1xyXG4gIGNvbnN0IHRpdGxlVGVtcGxhdGVFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RpdGxlLXRlbXBsYXRlJyk7XHJcbiAgY29uc3QgbmV3dGl0bGVFbGVtZW50ID0gdGl0bGVUZW1wbGF0ZUVsZW1lbnQuY2xvbmVOb2RlKHRydWUpO1xyXG5cclxuICBuZXd0aXRsZUVsZW1lbnQudGV4dENvbnRlbnQgPSAnQVBJLWJhc2VkLXdlYmFwJztcclxuXHJcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbWFpbicpLmFwcGVuZENoaWxkKG5ld3RpdGxlRWxlbWVudCk7XHJcbn07XHJcblxyXG5jb25zdCBpbml0ID0gYXN5bmMgKCkgPT4ge1xyXG4gIGluaXRUZW1wbGF0ZSgpO1xyXG59O1xyXG5cclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBpbml0KTtcclxuXHJcbi8vYWxhemFyXHJcbnZhciBtb3ZpZXM9IGF3YWl0IGZpbGUuZ2V0KCdodHRwczovL2FwaS50dm1hemUuY29tL3Nob3dzJyk7XHJcbnZhciBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZsZXgtY29udGFpbmVyXCIpXHJcbnZhciBtb2RhbD0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50di1zaG93LW1vZGFsXCIpO1xyXG52YXIgY29tbWVudEJ1dHRvbnM9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY29tbWVudFwiKTtcclxudmFyIHNwYW4gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY2xvc2VcIilbMF07XHJcbmNvbW1lbnRCdXR0b25zLmZvckVhY2goYm94ID0+IHtcclxuICAgIGJveC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9PntcclxuICAgICAgICBtb2RhbC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiXHJcbiAgICB9KTtcclxuICAgIFxyXG59KTtcclxuc3Bhbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT57XHJcbiAgICBtb2RhbC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbn0pO1xyXG5cclxudmFyIGZpbG1EYXRhPVwiXCI7XHJcbm1vdmllcy5mb3JFYWNoKGUgPT4ge1xyXG4gICAgbGV0IGlkPSBlLmlkO1xyXG4gICAgbGV0IG5hbWU9IGUubmFtZTtcclxuICAgIGxldCBpbWFnZSA9IGUuaW1hZ2UubWVkaXVtXHJcbmZpbG1EYXRhKz1gXHJcbjxkaXYgY2xhc3M9XCJzaG93c1wiPlxyXG5cdFx0XHRcdDxkaXYgaWQ9XCIxXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgJHtpZH0gICR7bmFtZX1cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiaW1nLWNvbnRhaW5lclwiPlxyXG5cdFx0XHRcdFx0PGltZyBzcmM9XCIke2ltYWdlfVwiIGFsdD1cInBob3RvXCI+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PGRpdiBjbGFzcz1cInJlYWN0aW9uXCI+XHJcblx0XHRcdFx0XHQ8YnV0dG9uPmxpa2U8L2J1dHRvbj5cclxuXHRcdFx0XHRcdDxidXR0b24gY2xhc3M9XCJjb21tZW50XCI+Y29tbWVudDwvYnV0dG9uPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuYDtcclxuXHJcbn0pO1xyXG5cclxuY29udGFpbmVyLmlubmVySFRNTD1maWxtRGF0YTsiLCJjb25zdCBnZXQgPSBhc3luYyAodXJsKSA9PiB7XHJcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwpO1xyXG4gIGRlYnVnZ2VyO1xyXG4gIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbn07XHJcblxyXG5jb25zdCBnZXRsaWtlID0gYXN5bmMgKHVybCkgPT4ge1xyXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7IG1ldGhvZDogXCJHRVRcIiB9KTtcclxuICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG59O1xyXG5jb25zdCBsaWtlID0gYXN5bmMgKHVybCwgaWQpID0+IHtcclxuICBhd2FpdCBmZXRjaCh1cmwsIHtcclxuICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgIGl0ZW1faWQ6IGlkLFxyXG4gICAgfSksXHJcbiAgICBoZWFkZXJzOiB7XHJcbiAgICAgIFwiQ29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOFwiLFxyXG4gICAgfSxcclxuICB9KTtcclxufTtcclxuY29uc3QgZ2V0Q29tbWVudCA9IGFzeW5jICh1cmwsIGlkKSA9PiB7XHJcbiAgbGV0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTtcclxuICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHtcclxuICAgIHJlc3BvbnNlID0gW107XHJcbiAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgfVxyXG4gIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbn07XHJcblxyXG5jb25zdCBjb21tZW50ID0gYXN5bmMgKHVybCwgaXRlbUlkLCB1c2VybmFtZSwgY29tbWVudCkgPT4ge1xyXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XHJcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICBpdGVtX2lkOiBpdGVtSWQsXHJcbiAgICAgIHVzZXJuYW1lLFxyXG4gICAgICBjb21tZW50LFxyXG4gICAgfSksXHJcbiAgICBoZWFkZXJzOiB7XHJcbiAgICAgIFwiQ29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOFwiLFxyXG4gICAgfSxcclxuICB9KTtcclxuICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzO1xyXG59O1xyXG4gbW9kdWxlLmV4cG9ydHM9IHsgZ2V0LCBnZXRsaWtlLCBsaWtlLCBnZXRDb21tZW50LCBjb21tZW50IH07XHJcbiJdLCJuYW1lcyI6WyJpbml0VGVtcGxhdGUiLCJuZXd0aXRsZUVsZW1lbnQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY2xvbmVOb2RlIiwidGV4dENvbnRlbnQiLCJxdWVyeVNlbGVjdG9yIiwiYXBwZW5kQ2hpbGQiLCJpbml0IiwiYXN5bmMiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwibW92aWVzIiwiY29udGFpbmVyIiwibW9kYWwiLCJjb21tZW50QnV0dG9ucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJzcGFuIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImZvckVhY2giLCJib3giLCJzdHlsZSIsImRpc3BsYXkiLCJmaWxtRGF0YSIsImUiLCJpZCIsIm5hbWUiLCJpbWFnZSIsIm1lZGl1bSIsImlubmVySFRNTCIsIm1vZHVsZSIsImV4cG9ydHMiLCJnZXQiLCJ1cmwiLCJmZXRjaCIsImpzb24iLCJnZXRsaWtlIiwibWV0aG9kIiwibGlrZSIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiaXRlbV9pZCIsImhlYWRlcnMiLCJnZXRDb21tZW50IiwicmVzcG9uc2UiLCJzdGF0dXMiLCJjb21tZW50IiwiaXRlbUlkIiwidXNlcm5hbWUiXSwic291cmNlUm9vdCI6IiJ9