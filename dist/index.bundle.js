(self.webpackChunkwebpack_init_project=self.webpackChunkwebpack_init_project||[]).push([[826],{421:()=>{},138:(e,t,n)=>{"use strict";n.a(e,(async(e,t)=>{try{n(421);var a=n(747),s=n.n(a),i=n(259),o=n.n(i);const e="https://api.tvmaze.com/shows",c=()=>{const e=document.getElementById("title-template").cloneNode(!0);e.textContent="API-based-webap",document.querySelector("main").appendChild(e)},r=async()=>{c()};window.addEventListener("load",r);const d=await s().getTvShows(e);await o().displayTvShows(d.list),o().addModal(),t()}catch(e){t(e)}}),1)},747:(e,t,n)=>{const a=n(232),s=n(801);e.exports={getTvShows:async e=>{const t=new a;return(await fetch(e).then((e=>e.json())).then((e=>e))).forEach((e=>{t.push(new s(e.id,e.name,e.type,e.language,e.genres[0],e.rating.average,e.image.medium,e.summary))})),t},getTvShow:async e=>{const t=await fetch(e).then((e=>e.json())).then((e=>e));return new s(t.id,t.name,t.type,t.language,t.genres[0],t.rating.average,t.image.medium,t.summary)},getlike:async e=>(await fetch(e,{method:"GET"})).json(),like:async(e,t)=>{await fetch(e,{method:"POST",body:JSON.stringify({item_id:t}),headers:{"Content-type":"application/json; charset=UTF-8"}})},getComment:async(e,t)=>{let n=await fetch(`${e}?item_id=${t}`);return 400===n.status?(n=[],n):n.json()},comment:async(e,t,n,a)=>(await fetch(e,{method:"POST",body:JSON.stringify({item_id:t,username:n,comment:a}),headers:{"Content-type":"application/json; charset=UTF-8"}})).status}},259:(e,t,n)=>{const a=n(747),s=document.querySelector(".flex-container"),i=document.querySelector(".modal-detail-img"),o=document.querySelector(".modal-detail-text");e.exports={displayTvShows:async e=>{let t="";e.forEach((e=>{t+=`\n<div class="shows">\n   \n   <div class="img-container">\n     <img src="${e.image}" alt="photo">\n   </div>\n   <div id="1">\n     ${e.id}  ${e.name}\n   </div>\n   <div class="reaction">\n     <button>like</button>\n     <button class="comment" data-id="${e.id}">comment</button>\n   </div>\n</div>\n`})),s.innerHTML=t},addModal:async()=>{const e=document.getElementById("myModal"),t=document.querySelectorAll(".comment");document.querySelector(".close").addEventListener("click",(()=>{e.style.display="none"})),t.forEach((t=>{t.addEventListener("click",(async()=>{const n=t.getAttribute("data-id"),s=await a.getTvShow(`https://api.tvmaze.com/shows/${n}`);i.innerHTML=`<img src = ${s.image}>`,o.innerHTML=`\n<p> Name:${s.name}</p>\n<p> Language:${s.language}</p>\n<p> Type:${s.type}</p>\n<p> Gener:${s.genress}</p>\n<p> Average rating:${s.rating.average}</p>\n<P>${s.summary}</p>\n      `,e.style.display="block"}))}))}}},801:e=>{e.exports=class{constructor(e,t,n,a,s,i,o,c){this.id=e,this.name=t,this.type=n,this.language=a,this.genres=s,this.rating=i,this.image=o,this.summary=c}}},232:e=>{e.exports=class{constructor(e=[]){this.list=e}push(e){this.list.push(e)}}}},e=>{e(e.s=138)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,